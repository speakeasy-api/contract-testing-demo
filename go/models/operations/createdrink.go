// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type CreateDrinkRequest struct {
	ID    string           `pathParam:"style=simple,explode=false,name=id"`
	Drink components.Drink `request:"mediaType=application/json"`
}

func (o *CreateDrinkRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateDrinkRequest) GetDrink() components.Drink {
	if o == nil {
		return components.Drink{}
	}
	return o.Drink
}

// CreateDrinkResponseBody - Success
type CreateDrinkResponseBody struct {
	JSON components.Drink `json:"json"`
}

func (o *CreateDrinkResponseBody) GetJSON() components.Drink {
	if o == nil {
		return components.Drink{}
	}
	return o.JSON
}

type CreateDrinkResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Success
	Object *CreateDrinkResponseBody
}

func (o *CreateDrinkResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateDrinkResponse) GetObject() *CreateDrinkResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
